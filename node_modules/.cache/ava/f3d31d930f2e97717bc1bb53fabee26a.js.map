{"version":3,"sources":["index.js"],"names":["Bluebird","require","test","Runner","t","runner","startTaskId","tasks","clone","fn","arg","resolve","successTaskId","failureTaskId","install","deploy","cleanup","start","results","console","log","is","length"],"mappings":"AAAA;;;;;;;;;;;;;;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,OAAOD,QAAQ,KAAR,CAAb;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;;AAEAC,KAAK,UAAL;AAAA,kEAAiB,iBAAME,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,kBADW,GACF,IAAIF,MAAJ,CAAW;AACtBG,2BAAa,OADS;AAEtBC,qBAAO;AACLC,uBAAO;AACLC,oBADK,cACFC,GADE,EACG;AACN,2BAAOV,SAASW,OAAT,CAAoBD,GAApB,YAAP;AACD,mBAHI;;AAILE,iCAAe,SAJV;AAKLC,iCAAe;AALV,iBADF;;AASLC,yBAAS;AACPL,oBADO,gBACF;AACH,2BAAOT,SAASW,OAAT,CAAiB,SAAjB,CAAP;AACD,mBAHM;;AAIPC,iCAAe,MAJR;AAKPC,iCAAe;AALR,iBATJ;;AAiBLX,sBAAM;AACJO,oBADI,gBACC;AACH,2BAAOT,SAASW,OAAT,CAAiB,MAAjB,CAAP;AACD,mBAHG;;AAIJC,iCAAe,QAJX;AAKJC,iCAAe;AALX,iBAjBD;;AAyBLE,wBAAQ;AACNN,oBADM,gBACD;AACH,2BAAOT,SAASW,OAAT,CAAiB,QAAjB,CAAP;AACD;AAHK,iBAzBH;;AA+BLK,yBAAS;AACPP,oBADO,gBACF;AACH,2BAAOT,SAASW,OAAT,CAAiB,SAAjB,CAAP;AACD;AAHM;AA/BJ;AAFe,aAAX,CADE;AAAA;AAAA,mBA0CON,OAAOY,KAAP,EA1CP;;AAAA;AA0CTC,mBA1CS;;;AA4CfC,oBAAQC,GAAR,CAAYF,OAAZ;AACAd,cAAEiB,EAAF,uBAAK,0CAAQC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqB,CAArB,EAAwB,4BAAxB;;AA7Ce;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"index.js","sourcesContent":["'use strict'\n\nconst Bluebird = require('bluebird')\nconst test = require('ava')\nconst Runner = require('../lib')\n\ntest('All pass', async t => {\n  var runner = new Runner({\n    startTaskId: 'clone',\n    tasks: {\n      clone: {\n        fn(arg) {\n          return Bluebird.resolve(`${arg} clone`)\n        },\n        successTaskId: 'install',\n        failureTaskId: 'cleanup'\n      },\n\n      install: {\n        fn() {\n          return Bluebird.resolve('install')\n        },\n        successTaskId: 'test',\n        failureTaskId: 'cleanup'\n      },\n\n      test: {\n        fn() {\n          return Bluebird.resolve('test')\n        },\n        successTaskId: 'deploy',\n        failureTaskId: 'cleanup'\n      },\n\n      deploy: {\n        fn() {\n          return Bluebird.resolve('deploy')\n        }\n      },\n\n      cleanup: {\n        fn() {\n          return Bluebird.resolve('cleanup')\n        }\n      }\n    }\n  })\n\n  const results = await runner.start()\n\n  console.log(results)\n  t.is(results.length, 4, 'Right number of tasks pass')\n})\n"]}